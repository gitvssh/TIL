AOP 실습

새 프로젝트
javaProject

03_AOP

lib 넣기

03_aop=>우클릭->property
javaBuildpath(왼쪽)-->Liraries 탭
add jars-> 01 lib

lib/*.jar

========
xml 폴더 만들기
========

03_AOP ->우클릭->properties
java buildpath -> library

add class folder->create new class folder
xml -> ok

create new folder

classes -> ok

-------------------
세팅 끝
-------------------

실습 1
src/sample1.MessageBean.java : 인터페이스

src/sample1.MessageBeanImpl.java : 구현클래스

어드바이스
sample1.LoggingAdvice.java

xml/beans.xml

sample1.HelloAppClient.java : 클라이언트 실행


=====================
실습 2
sample2.MessageBean.java 인터페이스

sample2.MessageBeanImpl.java
구현클래스 = 일하는클래스 = 비지니스로직 = 대표업무

advice:
src/sample2.LoggingAdvice2.java

xml/beans2.xml

src/sample2.HelloAppClient2.java


=======================
실습 3 어노테이션 사용

1. sample3.MessageBean.java
2. sample3.MessageBeanImpl.java
3. sample3.LoggingAdvice3.java
4. xml/beans3.xml
5. sample3.HelloAppClient3.java

src/sample3.MessageBean.java

src/sample3.MessageBeanImpl.java
비지니스로직
src/sample3.LoggingAdvice3.java
공통사용부분
src/sample3.HelloAppClient3.java

어노테이션
@Aspect => Advice 클래스에 마크를 부여하는 어노테이션
@Around => AroundAdvice 메서드에 부여하는 어노테이션
@Before -> BeforeAdvice 메서드에 부여하는 어노테이션
@After -> AfterAdvice 메서드에 부여하는 어놑에ㅣ션
@AfterReturning ->AfterReturning 메서드에 부여하는 어노테이션
@AfterThrowing -> AfterThrowingAdvice 메서드에 부여하는 어노테이션

Aspect : 공통 사용 부분의 객체(클래스)
Advice : Aspect의해 실행되는 기능(메서드)
pointcut : 적용 위치(클래스나, 메서드나)
advisor : point+advice 합친것
joinpoint : Aspect 적용될 대상 지점 (적용지점)
 